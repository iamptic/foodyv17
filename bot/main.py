import os
from telegram import (
    Update, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
)
from telegram.ext import (
    Application, CommandHandler, ContextTypes
)

BOT_TOKEN = os.getenv("BOT_TOKEN")  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ Railway Variables
WEBAPP_BUYER_URL = os.getenv("WEBAPP_BUYER_URL", "https://foodyweb-production.up.railway.app/web/buyer/")
WEBAPP_MERCHANT_URL = os.getenv("WEBAPP_MERCHANT_URL", "https://foodyweb-production.up.railway.app/web/merchant/")

INTRO = (
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª Mini App:\n"
    "‚Ä¢ üõçÔ∏è –í–∏—Ç—Ä–∏–Ω–∞ ‚Äî —Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ñ—Ñ–µ—Ä—ã\n"
    "‚Ä¢ üë®‚Äçüç≥ –õ–ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ñ—Ñ–µ—Ä–∞–º–∏"
)

def kb_two_tabs() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üõçÔ∏è –í–∏—Ç—Ä–∏–Ω–∞", web_app=WebAppInfo(url=WEBAPP_BUYER_URL))],
            [InlineKeyboardButton("üë®‚Äçüç≥ –õ–ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞", web_app=WebAppInfo(url=WEBAPP_MERCHANT_URL))],
        ]
    )

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # /start [buyer|merchant] ‚Äî –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –±—ã—Å—Ç—Ä. –ø–µ—Ä–µ—Ö–æ–¥
    arg = (context.args[0].lower() if context.args else "")
    if arg == "buyer":
        await update.message.reply_text("–û—Ç–∫—Ä—ã—Ç—å –≤–∏—Ç—Ä–∏–Ω—É:", reply_markup=kb_two_tabs())
        return
    if arg == "merchant":
        await update.message.reply_text("–û—Ç–∫—Ä—ã—Ç—å –õ–ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞:", reply_markup=kb_two_tabs())
        return
    await update.message.reply_text(INTRO, reply_markup=kb_two_tabs())

async def app_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(INTRO, reply_markup=kb_two_tabs())

def main() -> None:
    if not BOT_TOKEN:
        raise SystemExit("BOT_TOKEN is not set")
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("app", app_cmd))

    # –ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥—ë–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî polling (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≤–µ–±—Ö—É–∫–æ–≤)
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()
